#include <iostream>

// Definition for a binary tree node.
struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
};

class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if (!root) return nullptr;
        TreeNode* left = invertTree(root->left);
        TreeNode* right = invertTree(root->right);
        root->left = right;
        root->right = left;
        return root;
    }
};

// Example usage:
// int main() {
//     Solution sol;
//     TreeNode* root = new TreeNode(4);
//     root->left = new TreeNode(2);
//     root->right = new TreeNode(7);
//     root->left->left = new TreeNode(1);
//     root->left->right = new TreeNode(3);
//     root->right->left = new TreeNode(6);
//     root->right->right = new TreeNode(9);
//     TreeNode* inverted = sol.invertTree(root);
//     // The tree is now inverted
//     return 0;
// }
